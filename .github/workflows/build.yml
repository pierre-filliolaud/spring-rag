name: Java 23 Build

on:
  push:
    branches:
      - main

jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 23
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '23'
#          cache: gradle
#
#      - name: Build with Gradle
#        run: ./gradlew clean build
#
#  test:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 23
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '23'
#          cache: gradle
#
#      - name: Run tests
#        run: ./gradlew test
#
##  package:
##    runs-on: ubuntu-latest
##    needs: build
##    steps:
##      - name: Checkout code
##        uses: actions/checkout@v3
##
##      - name: Set up JDK 23
##        uses: actions/setup-java@v3
##        with:
##          distribution: 'temurin'
##          java-version: '23'
##          cache: gradle
##
##      - name: Jar with Gradle
##        run: ./gradlew jar
#
#  docker:
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 23
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '23'
#          cache: gradle
#
#      - name: Package with Gradle
#        run: ./gradlew bootJar
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/spring-rag:latest

  kubernetes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Start Kubernetes minikube
        uses: medyagh/setup-minikube@master
      - name: Try the Kubernetes cluster
        run: kubectl get nodes
      - name: Deploy the image to minikube
        run: kubectl apply -f src/main/k8s/deployment.yml
      - name: Get Kubernetes service URL
        run: |
          kubectl describe pod -l app=spring-rag
          kubectl logs $(kubectl get pods -l app=spring-rag -o name)
          kubectl wait --for=condition=Ready pod -l app=spring-rag --timeout=120s
          kubectl get pods
          minikube service list
          minikube service spring-rag --url
          echo "------------------opening the service------------------"
      - name: Test Kubernetes service URL
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 10
          max_attempts: 4
          command: curl $(minikube service spring-rag --url)/samples/EFREI
      - name: Log Kubernetes pods
        run: |
          kubectl logs $(kubectl get pods -l app=spring-rag -o name)